name: Build and Deploy to VPS

on:
  push:
    branches: [ "main", "master" ] # This repo uses 'main', but 'master' is good to have

env:
  # Use the repo name for the Docker image name, replacing slashes for compatibility
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            # Log into GitHub's container registry from the server
            docker login ghcr.io -u ${{ github.actor }} --password-stdin <<< "${{ secrets.GITHUB_TOKEN }}"
            
            # Stop and remove the old container, then pull the new image
            docker stop $(echo ${{ env.IMAGE_NAME }} | cut -d'/' -f2) || true
            docker rm $(echo ${{ env.IMAGE_NAME }} | cut -d'/' -f2) || true
            docker pull ghcr.io/${{ env.IMAGE_NAME }}:latest

            # Run the new container
            # This app runs on port 5000 internally, so we map it to host port 8001
            docker run -d \
              --name $(echo ${{ env.IMAGE_NAME }} | cut -d'/' -f2) \
              --network my-shared-network \
              -p 8001:5000 \
              --restart unless-stopped \
              ghcr.io/${{ env.IMAGE_NAME }}:latest
